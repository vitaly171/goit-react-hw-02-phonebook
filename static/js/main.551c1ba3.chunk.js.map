{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Container/Container.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","INIITAL_STATE","name","number","ContactForm","state","handleInputForm","e","currentTarget","value","setState","handleFormSubmit","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckContact","alert","this","className","s","form","onSubmit","input","type","pattern","title","required","placeholder","onChange","button","Component","ContactsList","contacts","onRemove","length","list","map","item","onClick","protoTypes","PropTypes","arrayOf","shape","string","isRequired","func","Filter","filter","label","target","Container","children","container","Section","section","App","handelAddContact","newContact","handelCheckContact","existContact","some","contact","handleDeleteContact","contactId","handleFilterChange","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContact","JSON","parse","prevProps","prevState","nextContact","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.551c1ba3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__2W_BR\",\"form\":\"ContactForm_form__3Lnp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__6wsi6\",\"item\":\"ContactsList_item__1RFc7\",\"contacts\":\"ContactsList_contacts__1DtAL\",\"button\":\"ContactsList_button__vTCQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__16Qyo\",\"filter\":\"Filter_filter__CDCR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1h8Bd\",\"title\":\"Section_title__VohUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cotainer\":\"Container_cotainer__JGe5a\"};","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nconst INIITAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = INIITAL_STATE;\r\n\r\n  handleInputForm = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidatedForm = this.validateForm();\r\n\r\n    if (!isValidatedForm) return;\r\n\r\n    onAdd({ id: uuid(), name, number });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckContact } = this.props;\r\n    if (!name || !number) {\r\n      alert('Some filed is empty');\r\n      return false;\r\n    }\r\n    return onCheckContact(name);\r\n  };\r\n\r\n  resetForm = () => this.setState(INIITAL_STATE);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\r\n        <label>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={this.handleInputForm}\r\n          />\r\n        </label>\r\n        <label>\r\n          <input\r\n            className={s.input}\r\n            type=\"tell\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            placeholder=\"Enter phone number\"\r\n            value={number}\r\n            onChange={this.handleInputForm}\r\n          />\r\n        </label>\r\n\r\n        <button className={s.button} type=\"submit\">\r\n          {' '}\r\n          Add Contact{' '}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onCheckContact: PropTypes.func.isRequired,\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <div className={s.contacts}>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li  className={s.item}key={id}>\r\n            <p>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onRemove(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsList.protoTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={({ target }) => onChange(target.value)}\r\n        placeholder=\"Enter name for Search\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import propTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: propTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import PropTypes from 'prop-types';\r\n\r\nimport s from './Section.module.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import { Component } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport Section from './components/Section';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contacts);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    } \n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    const nextContact = this.state.contacts;\n    const prevContact = prevState.contacts;\n\n    if (nextContact !== prevContact) {\n      localStorage.setItem('contacts', JSON.stringify(nextContact));\n    }\n  }\n\n  handelAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handelCheckContact = name => {\n    const { contacts } = this.state;\n\n    const existContact = contacts.some(contact => contact.name === name);\n    existContact && alert(`${name} is already in contacts`);\n    \n    return !existContact;\n  };\n\n  handleDeleteContact = contactId =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm\n            onAdd={this.handelAddContact}\n            onCheckContact={this.handelCheckContact}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && (\n            <Filter filter={filter} onChange={this.handleFilterChange} />\n          )}\n          {contacts.length > 0 ? (\n            <ContactsList\n              contacts={visibleContacts}\n              onRemove={this.handleDeleteContact}\n            />\n          ) : (\n            <p>Your phonebook is empty. Please add contact</p>\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}